import type { PropType, ExtractPropTypes, StyleValue } from "vue";

interface column {
  label: string;
  prop: string;
  width?: number;
  align?: string
}

interface option {
  column?: column[];
  border?: boolean;
  selection?: boolean;
  headStyle?: StyleValue;
  bodyStyle?: StyleValue;
  stripe?: boolean;
  stripeColors?: string[];
  empty?: string
}

export const tableProps = {
  data: {
    type: Array as PropType<object[]>,
    required: true
  },
  options: {
    type: Object as PropType<option>,
    default: {}
  }
} as const

export type tableProps = ExtractPropTypes<typeof tableProps>


export const tableEmits = {
  ['select-change']: (val: object) => typeof val === 'object',
}

export type tableEmits = typeof tableEmits