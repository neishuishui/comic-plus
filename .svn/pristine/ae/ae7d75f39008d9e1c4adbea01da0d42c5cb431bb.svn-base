import type { PropType, ExtractPropTypes } from "vue";

type valueType = Date | string | number | Date[] | string[] | number[];

export const dateSelectProps = {
  value: [Date, String, Number, Array] as PropType<valueType>,
  shortcuts: Array as PropType<object[]>,
  range: Boolean,
  valueFormat: {
    type: String,
    default: 'Date',
    validator: function (value: string) {
      return ['Date', 'String', 'Number'].includes(value);
    }
  },
  time: Boolean
} as const

export type dateSelectProps = ExtractPropTypes<typeof dateSelectProps>


export const dateSelectEmits = {
  pick: (val: number[]) => true,
  cancel: () => true
}

export type dateSelectEmits = typeof dateSelectEmits