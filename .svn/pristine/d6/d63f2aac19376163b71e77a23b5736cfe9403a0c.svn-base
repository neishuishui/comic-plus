<template>
  <transition name="cu-fade">
    <div class="cu-loading" :class="{ blur, glabal }" v-show="visible" :style="style">
      <i :class="icon" class="is-loading"></i>
      <span v-if="text" class="cu-loading__text">{{ text }}</span>
    </div>
  </transition>
</template>

<script setup lang="ts">
import { ref, computed, onMounted, nextTick, watch } from 'vue';
import { useScrollLock } from '@vueuse/core';
import '../style/loading.css';
import { getMaxZIndex } from '../../../utils';
import { loadingProps } from './main.props';
defineOptions({
  name: 'CuLoading'
});

const props = defineProps(loadingProps);

const visible = ref(false);
const isLocked = useScrollLock(document.body);

if (props.glabal) {
  watch(
    () => visible.value,
    (val) => {
      isLocked.value = val;
    }
  );
}

const style = computed(() => {
  const parentEl: HTMLElement = props.target || document.body;
  return {
    'z-index': getMaxZIndex(parentEl),
    background: props.background,
    color: props.color
  };
});

function updateVisible(val: boolean) {
  visible.value = val;
}

onMounted(() => {
  const parentEl: HTMLElement = props.target || document.body;
  const position = window.getComputedStyle(parentEl).position;
  if (position === 'static') {
    parentEl.style.setProperty('position', 'relative');
  }
  nextTick(() => {
    visible.value = props.visible;
  });
});

defineExpose({
  visible,
  updateVisible
});
</script>
