import type { ObjectDirective, App } from 'vue';
import { createLoading, LoadingService, getDataAttribute } from './src/loading';

const useLoading = function (): ObjectDirective {
  return {
    mounted(el, binding) {
      if (binding.value) {
        el.instance = createLoading(
          {
            target: el,
            ...getDataAttribute(el)
          },
          binding.value
        );
      }
    },
    updated(el, binding) {
      if (!el.instance && binding.value) {
        el.instance = createLoading(
          {
            target: el,
            ...getDataAttribute(el)
          },
          binding.value
        );
      } else {
        if (!el.instance) return;
        el.instance.updateVisible(binding.value);
      }
    },
    unmounted(el) {
      if (el.instance) {
        el.instance.destroy();
        el.instance = null;
      }
    }
  };
};

const vLoading = {
  install: function (app: App) {
    app.directive('loading', useLoading());
  }
};

const CuLoading = {
  service: LoadingService
};

export { vLoading, CuLoading, useLoading };
