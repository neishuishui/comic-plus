<template>
  <div class="cu-tabs" :class="type" :style="{ '--color': color }">
    <i class="left cu-icon-left" @click="scrollTo(-200)" v-if="haveScroll"></i>
    <i class="right cu-icon-right" @click="scrollTo(200)" v-if="haveScroll"></i>
    <scroll-bar ref="scrollBarRef" @scroll="onScroll">
      <div class="cu-tabs__list" ref="tabList">
        <slot></slot>
      </div>
    </scroll-bar>
  </div>
</template>

<script setup lang="ts">
import { provide, computed, ref } from 'vue';
import '../style/css';
import ScrollBar from '../../scroll-bar';
import { tabProps } from './main.props';
defineOptions({
  name: 'CuTabs'
});
const props = defineProps(tabProps);

const tabList = ref();
const scrollBarRef = ref();
const recoreScroll = ref(0);

const haveScroll = computed(() => {
  if (!scrollBarRef.value) return;
  return scrollBarRef.value.showThumbx;
});

const emit = defineEmits(['update:modelValue', 'change']);

function itemClick(name: string | number) {
  emit('update:modelValue', name);
  emit('change', name);
}

function scrollTo(left: number) {
  scrollBarRef.value.setBarLeft(recoreScroll.value + left);
}

function onScroll(e) {
  recoreScroll.value = e.target.scrollLeft;
}

provide('tabs:parent', {
  props,
  itemClick
});
</script>
