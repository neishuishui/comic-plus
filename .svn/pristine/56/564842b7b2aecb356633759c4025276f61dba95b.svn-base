import type { PropType, ExtractPropTypes } from "vue";


type valueType = Date | string | number | Date[] | string[] | number[];

export const datePickerProps = {
  modelValue: {
    type: [Date, String, Number, Array] as PropType<valueType>
  },
  format: {
    type: String,
    default: 'yyyy-MM-dd'
  },
  valueFormat: {
    type: String,
    default: 'Date',
    validator: function (value: string) {
      return ['Date', 'String', 'Number'].includes(value);
    }
  },
  rangeSeparator: {
    type: String,
    default: '/'
  },
  size: String,
  range: Boolean,
  icon: {
    type: String,
    default: 'cu-icon-calendar'
  },
  shortcuts: Array as PropType<object[]>,
  width: String,
  disabled: Boolean,
  placeholder: String,
  clearable: Boolean,
  startPlaceholder: String,
  endPlaceholder: String
} as const

export type datePickerProps = ExtractPropTypes<typeof datePickerProps>


export const datePickerEmits = {
  ['update:modelValue']: (val: valueType) => true,
  change: (val: valueType) => true,
  clear: () => true
}

export type datePickerEmits = typeof datePickerEmits