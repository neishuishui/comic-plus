import type { PropType, ExtractPropTypes } from 'vue';
import type { ComicTableOption } from './type';
import type { ComicSize } from '../../type';

export type TreeProps = {
  children: string;
  hasChildren?: string;
};

export const tableProps = {
  height: String,
  size: String as PropType<ComicSize>,
  data: {
    type: Array as PropType<object[]>,
    required: true
  },
  options: Object as PropType<ComicTableOption>,
  treeProps: Object as PropType<TreeProps>,
  lazyLoad: Boolean,
  load: Function,
  expand: Boolean,
  headerClassName: String,
  bodyClassName: String
} as const;

export type TableProps = ExtractPropTypes<typeof tableProps>;

export const tableEmits = {
  ['select-change']: (val: object) => typeof val === 'object'
};

export type TableEmits = typeof tableEmits;
