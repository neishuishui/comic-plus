import type { PropType, ExtractPropTypes } from 'vue';
import type { ComicType } from '../../type';

export const sliderProps = {
  modelValue: {
    type: [Number, Array] as PropType<number | number[]>,
    required: true
  },
  type: {
    type: String as PropType<ComicType>,
    default: 'primary'
  },
  color: String,
  range: Boolean,
  max: {
    type: Number,
    default: 100,
    validator(value: number) {
      return value >= 1;
    }
  },
  min: {
    type: Number,
    default: 0,
    validator(value: number) {
      return value >= 0;
    }
  },
  step: {
    type: Number,
    default: () => {
      return 0;
    }
  },
  showStep: Boolean,
  disabled: Boolean
} as const;

export type SliderProps = ExtractPropTypes<typeof sliderProps>;

export const sliderEmits = {
  ['update:modelValue']: (val: number | number[]) => true,
  change: (val: number | number[]) => true
};

export type SliderEmits = typeof sliderEmits;
