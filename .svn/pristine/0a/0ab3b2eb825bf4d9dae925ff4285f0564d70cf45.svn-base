
declare const _default: import('vue').DefineComponent<{
    readonly modelValue: {
        readonly type: import("vue").PropType<string | number | boolean>;
        readonly required: true;
    };
    readonly activeText: StringConstructor;
    readonly unActiveText: StringConstructor;
    readonly activeValue: import("vue").PropType<string | number>;
    readonly unActiveValue: import("vue").PropType<string | number>;
    readonly activeColor: StringConstructor;
    readonly unActiveColor: StringConstructor;
    readonly disabled: BooleanConstructor;
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    change: (val: string | number | boolean) => void;
    "update:modelValue": (val: string | number | boolean) => void;
}, string, import("vue").PublicProps, Readonly<import("vue").ExtractPropTypes<{
    readonly modelValue: {
        readonly type: import("vue").PropType<string | number | boolean>;
        readonly required: true;
    };
    readonly activeText: StringConstructor;
    readonly unActiveText: StringConstructor;
    readonly activeValue: import("vue").PropType<string | number>;
    readonly unActiveValue: import("vue").PropType<string | number>;
    readonly activeColor: StringConstructor;
    readonly unActiveColor: StringConstructor;
    readonly disabled: BooleanConstructor;
}>> & {
    onChange?: (val: string | number | boolean) => any;
    "onUpdate:modelValue"?: (val: string | number | boolean) => any;
}, {
    readonly disabled: boolean;
}, {}>;
export default _default;
