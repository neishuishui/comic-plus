<template>
  <span class="cu-countdown">
    <slot name="prefix">{{ prefix }}</slot>

    <span class="cu-countdown_time"> {{ displayValue }} </span>

    <slot name="suffix">{{ suffix }}</slot>
  </span>
</template>

<script setup lang="ts">
import { ref, computed, watch, onUnmounted } from 'vue';
import '../style/css';
import { formatTime } from './utils';
defineOptions({
  name: 'CuCountdown'
});
const props = defineProps({
  value: [Number, String],
  format: {
    type: String,
    default: 'HH:mm:ss'
  },
  prefix: String,
  suffix: String
});

const emit = defineEmits(['finish']);

const temptime = ref(getTime(props.value) - Date.now());
let timer: number | null;

const displayValue = computed(() => formatTime(temptime.value, props.format));

function getTime(time: number | string) {
  if (typeof time === 'string') {
    if (isNaN(new Date(time).getTime())) {
      throw 'times is not legitimate';
    }
  }
  return new Date(time).getTime();
}

function pause() {
  if (timer) {
    clearInterval(timer);
    timer = null;
  }
}

function start() {
  const timestamp = getTime(props.value);
  timer = setInterval(() => {
    let diff = timestamp - Date.now();
    if (diff <= 0) {
      emit('finish');
      pause();
    }
    temptime.value = diff <= 0 ? 0 : diff;
  }, 30);
}

watch(
  () => props.value,
  () => {
    pause();
    start();
  },
  {
    immediate: true
  }
);

onUnmounted(() => {
  pause();
});
</script>
