<template>
  <div class="cu-collapse" :class="{ background }">
    <slot></slot>
  </div>
</template>

<script setup lang="ts">
import { ref, provide } from 'vue';
import '../style/css';

defineOptions({
  name: 'CuCollapse'
});
const emit = defineEmits(['update:modelValue', 'change']);

const props = defineProps<{
  modelValue: string | string[] | object;
  accordion?: boolean;
  background?: boolean;
  maxHeight?: string | number;
  color?: string;
}>();
const activeValue = ref(props.modelValue);

const useCollapseChange = function (val: boolean, name: string) {
  if (props.accordion) {
    activeValue.value = val ? name : '';
    updateValue();
    return;
  }
  let flag = activeValue.value.includes(name);
  if (val) {
    !flag && activeValue.value.push(name);
  } else {
    flag &&
      activeValue.value?.splice(
        activeValue.value?.findIndex((v: string) => v === name),
        1
      );
  }
  updateValue();
};
function updateValue() {
  emit('update:modelValue', activeValue.value);
  emit('change', activeValue.value);
}

provide('activeValue', activeValue);
provide('accordion', props.accordion);
provide('parentColor', props.color);
provide('isBackground', props.background);
provide('maxHeight', props.maxHeight);
provide('useCollapseChange', useCollapseChange);
</script>
