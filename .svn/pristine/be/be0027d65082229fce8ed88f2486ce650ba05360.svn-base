import type { PropType, ExtractPropTypes } from 'vue';
import type { UploadFile } from './type';

export const uploadProps = {
  fileList: Array as PropType<UploadFile[]>,
  type: {
    type: String,
    default: 'list',
    validator: (value: string) => ['list', 'picture'].includes(value)
  },
  http: {
    type: [String, Function] as PropType<string | Function>,
    required: true
  },
  headers: Object,
  data: Object,
  autoUpload: {
    type: Boolean,
    default: true
  },
  multiple: Boolean,
  limit: Number,
  disabled: Boolean,
  maxFileSize: String,
  withCredentials: Boolean,
  accept: String,
  onExceed: Function,
  onLarge: Function,
  onSuccess: Function,
  onError: Function,
  onChange: Function,
  beforeUpload: Function
} as const;

export type UploadProps = ExtractPropTypes<typeof uploadProps>;

export const uploadEmits = {
  ['update:fileList']: (files: UploadFile[]) => Array.isArray(files)
};

export type UploadEmits = typeof uploadEmits;
