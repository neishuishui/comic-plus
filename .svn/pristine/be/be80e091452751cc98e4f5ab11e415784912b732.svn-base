<template>
  <div v-if="range">
    <div class="rangetime-box">
      <div class="time-title">开始时间</div>
      <div class="cu-time-picker__listbox">
        <list :num="24" :time="time[0]" @change="time[0] = $event"></list>
        <list :num="60" :time="time[1]" @change="time[1] = $event"></list>
        <list :num="60" :time="time[2]" @change="time[2] = $event"></list>
      </div>
    </div>
    <div class="rangetime-box">
      <div class="time-title">结束时间</div>
      <div class="cu-time-picker__listbox">
        <list :num="24" :time="time2[0]" @change="time2[0] = $event"></list>
        <list :num="60" :time="time2[1]" @change="time2[1] = $event"></list>
        <list :num="60" :time="time2[2]" @change="time2[2] = $event"></list>
      </div>
    </div>
  </div>
  <div class="cu-time-picker__listbox" v-else>
    <list :num="24" :time="time[0]" @change="time[0] = $event"></list>
    <list :num="60" :time="time[1]" @change="time[1] = $event"></list>
    <list :num="60" :time="time[2]" @change="time[2] = $event"></list>
  </div>

  <div class="cu-time-picker__footer">
    <cu-button size="mini" @click="emit('cancel')">取消</cu-button>
    <cu-button size="mini" type="primary" @click="confirm">确认</cu-button>
  </div>
</template>

<script setup lang="ts">
import { ref, onBeforeMount } from 'vue';
import '../style/css';
import list from './list.vue';
import CuButton from '../../button/src/main.vue';

const props = defineProps({
  timeValue: Array,
  range: Boolean
});
const time = ref(['00', '00', '00']);
const time2 = ref(['00', '00', '00']);

const emit = defineEmits(['confirm', 'cancel']);

function confirm() {
  emit('confirm', props.range ? [time.value, time2.value] : time.value);
}
onBeforeMount(() => {
  if (props.range) {
    time.value = [...props.timeValue[0]];
    time2.value = [...props.timeValue[1]];
  } else {
    time.value = [...props.timeValue];
  }
});
</script>
