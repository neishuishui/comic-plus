import { PropType, ExtractPropTypes } from 'vue';

export declare const inputProps: {
    readonly modelValue: {
        readonly type: PropType<string | number>;
        readonly required: true;
    };
    readonly size: StringConstructor;
    readonly prefixIcon: StringConstructor;
    readonly suffixIcon: StringConstructor;
    readonly clearable: BooleanConstructor;
    readonly placeholder: StringConstructor;
    readonly type: StringConstructor;
    readonly width: StringConstructor;
    readonly disabled: BooleanConstructor;
};
export type InputProps = ExtractPropTypes<typeof inputProps>;
export declare const inputEmits: {
    "update:modelValue": (val: string | number) => boolean;
    change: (val: string | number) => boolean;
    input: (val: string | number) => boolean;
    blur: (e: FocusEvent) => boolean;
    clear: () => boolean;
    focus: (e: FocusEvent) => boolean;
};
export type InputEmits = typeof inputEmits;
