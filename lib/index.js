"use strict";
Object.defineProperties(exports, { __esModule: { value: true }, [Symbol.toStringTag]: { value: "Module" } });
const vue = require("vue");
const typescript = require("./utils/typescript.js");
const color = require("./utils/color.js");
require("./utils/config.js");
const tools = require("./utils/tools.js");
const tool = require("./tools/tool.js");
const request = require("./tools/request.js");
const validator = require("./tools/validator.js");
const index$1i = require("./components/index.js");
const index = require("./components/message-box/index.js");
const index$1 = require("./components/preview-image/index.js");
const main = require("./components/loading/main.js");
const main$1 = require("./components/tooltip/main.js");
const main$2 = require("./components/infinite-scroll/main.js");
const index$2 = require("./components/button/index.js");
const index$3 = require("./components/button-group/index.js");
const index$4 = require("./components/link/index.js");
const index$5 = require("./components/container/index.js");
const index$6 = require("./components/form/index.js");
const index$7 = require("./components/form-item/index.js");
const index$8 = require("./components/checkbox/index.js");
const index$9 = require("./components/checkbox-group/index.js");
const index$a = require("./components/radio/index.js");
const index$b = require("./components/radio-button/index.js");
const index$c = require("./components/radio-group/index.js");
const index$d = require("./components/input/index.js");
const index$e = require("./components/input-number/index.js");
const index$f = require("./components/textarea/index.js");
const index$g = require("./components/switch/index.js");
const index$h = require("./components/slider/index.js");
const index$i = require("./components/select/index.js");
const index$j = require("./components/option/index.js");
const index$k = require("./components/option-group/index.js");
const index$l = require("./components/cascader/index.js");
const index$m = require("./components/time-picker/index.js");
const index$n = require("./components/date-picker/index.js");
const index$o = require("./components/color-picker/index.js");
const index$p = require("./components/upload/index.js");
const index$q = require("./components/table/index.js");
const index$r = require("./components/tag/index.js");
const index$s = require("./components/tag-complex/index.js");
const index$t = require("./components/collapse/index.js");
const index$u = require("./components/collapse-item/index.js");
const index$v = require("./components/waterfall/index.js");
const index$w = require("./components/waterfall-item/index.js");
const index$x = require("./components/image/index.js");
const index$y = require("./components/badge/index.js");
const index$z = require("./components/carousel/index.js");
const index$A = require("./components/carousel-item/index.js");
const index$B = require("./components/progress/index.js");
const index$C = require("./components/card/index.js");
const index$D = require("./components/card-group/index.js");
const index$E = require("./components/empty/index.js");
const index$F = require("./components/ellipsis/index.js");
const index$G = require("./components/countdown/index.js");
const index$H = require("./components/pagination/index.js");
const index$I = require("./components/menu/index.js");
const index$J = require("./components/menu-item/index.js");
const index$K = require("./components/sub-menu/index.js");
const index$L = require("./components/tabs/index.js");
const index$M = require("./components/tab-pane/index.js");
const index$N = require("./components/elevator/index.js");
const index$O = require("./components/elevator-item/index.js");
const index$P = require("./components/backtop/index.js");
const index$Q = require("./components/breadcrumb/index.js");
const index$R = require("./components/breadcrumb-item/index.js");
const index$S = require("./components/dialog/index.js");
const index$T = require("./components/drawer/index.js");
const index$U = require("./components/transition-collapse/index.js");
const index$V = require("./components/divider/index.js");
const index$W = require("./components/step/index.js");
const index$X = require("./components/step-item/index.js");
const index$Y = require("./components/step-card/index.js");
const index$Z = require("./components/scrollbar/index.js");
const index$_ = require("./components/avatar/index.js");
const index$$ = require("./components/avatar-group/index.js");
const index$10 = require("./components/dropdown/index.js");
const index$11 = require("./components/dropdown-menu/index.js");
const index$12 = require("./components/dropdown-item/index.js");
const index$13 = require("./components/tree/index.js");
const index$14 = require("./components/atlas/index.js");
const index$15 = require("./components/tip/index.js");
const index$16 = require("./components/anchor/index.js");
const index$17 = require("./components/anchor-link/index.js");
const index$18 = require("./components/affix/index.js");
const index$19 = require("./components/pistol/index.js");
const index$1a = require("./components/bullet/index.js");
const index$1b = require("./components/zone/index.js");
const index$1c = require("./components/list/index.js");
const index$1d = require("./components/list-item/index.js");
const index$1e = require("./components/skeleton/index.js");
const index$1f = require("./components/skeleton-item/index.js");
const index$1g = require("./components/rate/index.js");
const index$1h = require("./components/space/index.js");
const plugin = {
  install(app, config) {
    index$1i.default.forEach((item) => {
      app.use(item);
    });
    app.config.globalProperties.$alert = index.default.alert;
    app.config.globalProperties.$confirm = index.default.confirm;
    app.config.globalProperties.$message = index.default.message;
    app.config.globalProperties.$notice = index.default.notice;
    app.config.globalProperties.$preview = index$1.preview;
    app.config.globalProperties.$loading = main.CuLoading;
    app.use(main.vLoading);
    app.use(main$1.vTooltip);
    app.use(main$2.vInfiniteScroll);
    useComicConfig(config);
  }
};
var assignConfig = vue.reactive({});
const useComicConfig = (config) => {
  setColor(config == null ? void 0 : config.color);
  assignConfig = vue.reactive(tool.deepMerge(assignConfig, config));
  setComicClassName(assignConfig.isComic);
  window["$COMIC"] = assignConfig;
};
const setColor = (value) => {
  if (!value)
    return;
  let obj = {};
  if (typeof value === "string") {
    obj["primary"] = value;
  } else {
    obj = value;
  }
  const colors = ["primary", "success", "warning", "danger", "info", "text"];
  for (const key in obj) {
    if (colors.includes(key)) {
      const c = color.colorToRgba(obj[key]) || [];
      document.documentElement.style.setProperty(`--cu-color-${key}`, `rgba(${c.join(",")})`);
      document.documentElement.style.setProperty(`--cu-color-${key}-light`, color.colorBlend(c, 70));
      document.documentElement.style.setProperty(`--cu-color-${key}-light2`, color.colorBlend(c, 50));
      document.documentElement.style.setProperty(`--cu-color-${key}-light3`, color.colorBlend(c, 10));
    }
  }
};
const setComicClassName = (comic) => {
  if (comic) {
    document.body.classList.add("comic-plus__is-comic");
  } else {
    document.body.classList.remove("comic-plus__is-comic");
  }
};
exports.isArray = typescript.isArray;
exports.isBoolean = typescript.isBoolean;
exports.isFunction = typescript.isFunction;
exports.isNumber = typescript.isNumber;
exports.isPromise = typescript.isPromise;
exports.isString = typescript.isString;
exports.isWindow = typescript.isWindow;
exports.debounce = tools.debounce;
exports.formatDate = tools.formatDate;
exports.throttle = tools.throttle;
exports.chunkArray = tool.chunkArray;
exports.copyToClipboard = tool.copyToClipboard;
exports.deepMerge = tool.deepMerge;
exports.parity = tool.parity;
exports.randomColor = tool.randomColor;
exports.randomUid = tool.randomUid;
exports.http = request.http;
exports.validateEmail = validator.validateEmail;
exports.validateExists = validator.validateExists;
exports.validateIdcard = validator.validateIdcard;
exports.validateInteger = validator.validateInteger;
exports.validateLicenseplate = validator.validateLicenseplate;
exports.validateNameEn = validator.validateNameEn;
exports.validateNameZh = validator.validateNameZh;
exports.validateNumRange = validator.validateNumRange;
exports.validatePhone = validator.validatePhone;
exports.CuMessageBox = index.default;
exports.preview = index$1.preview;
exports.CuLoading = main.CuLoading;
exports.useLoading = main.useLoading;
exports.vLoading = main.vLoading;
exports.useTooltip = main$1.useTooltip;
exports.vTooltip = main$1.vTooltip;
exports.useInfiniteScroll = main$2.useInfiniteScroll;
exports.vInfiniteScroll = main$2.vInfiniteScroll;
exports.CuButton = index$2.CuButton;
exports.CuButtonGroup = index$3.CuButtonGroup;
exports.CuLink = index$4.CuLink;
exports.CuAside = index$5.CuAside;
exports.CuContainer = index$5.CuContainer;
exports.CuFooter = index$5.CuFooter;
exports.CuHeader = index$5.CuHeader;
exports.CuMain = index$5.CuMain;
exports.CuForm = index$6.CuForm;
exports.CuFormItem = index$7.CuFormItem;
exports.CuCheckbox = index$8.CuCheckbox;
exports.CuCheckboxGroup = index$9.CuCheckboxGroup;
exports.CuRadio = index$a.CuRadio;
exports.CuRadioButton = index$b.CuRadioButton;
exports.CuRadioGroup = index$c.CuRadioGroup;
exports.CuInput = index$d.CuInput;
exports.CuInputNumber = index$e.CuInputNumber;
exports.CuTextarea = index$f.CuTextarea;
exports.CuSwitch = index$g.CuSwitch;
exports.CuSlider = index$h.CuSlider;
exports.CuSelect = index$i.CuSelect;
exports.CuOption = index$j.CuOption;
exports.CuOptionGroup = index$k.CuOptionGroup;
exports.CuCascader = index$l.CuCascader;
exports.CuTimePicker = index$m.CuTimePicker;
exports.CuDatePicker = index$n.CuDatePicker;
exports.CuColorPicker = index$o.CuColorPicker;
exports.CuUpload = index$p.CuUpload;
exports.CuTable = index$q.CuTable;
exports.CuTag = index$r.CuTag;
exports.CuTagComplex = index$s.CuTagComplex;
exports.CuCollapse = index$t.CuCollapse;
exports.CuCollapseItem = index$u.CuCollapseItem;
exports.CuWaterfall = index$v.CuWaterfall;
exports.CuWaterfallItem = index$w.CuWaterfallItem;
exports.CuImage = index$x.CuImage;
exports.CuBadge = index$y.CuBadge;
exports.CuCarousel = index$z.CuCarousel;
exports.CuCarouselItem = index$A.CuCarouselItem;
exports.CuProgress = index$B.CuProgress;
exports.CuCard = index$C.CuCard;
exports.CuCardGroup = index$D.CuCardGroup;
exports.CuEmpty = index$E.CuEmpty;
exports.CuEllipsis = index$F.CuEllipsis;
exports.CuCountdown = index$G.CuCountdown;
exports.CuPagination = index$H.CuPagination;
exports.CuMenu = index$I.CuMenu;
exports.CuMenuItem = index$J.CuMenuItem;
exports.CuSubMenu = index$K.CuSubMenu;
exports.CuTabs = index$L.CuTabs;
exports.CuTabPane = index$M.CuTabPane;
exports.CuElevator = index$N.CuElevator;
exports.CuElevatorItem = index$O.CuElevatorItem;
exports.CuBacktop = index$P.CuBacktop;
exports.CuBreadcrumb = index$Q.CuBreadcrumb;
exports.CuBreadcrumbItem = index$R.CuBreadcrumbItem;
exports.CuDialog = index$S.CuDialog;
exports.CuDrawer = index$T.CuDrawer;
exports.CuTransitionCollapse = index$U.CuTransitionCollapse;
exports.CuDivider = index$V.CuDivider;
exports.CuStep = index$W.CuStep;
exports.CuStepItem = index$X.CuStepItem;
exports.CuStepCard = index$Y.CuStepCard;
exports.CuScrollbar = index$Z.CuScrollbar;
exports.CuAvatar = index$_.CuAvatar;
exports.CuAvatarGroup = index$$.CuAvatarGroup;
exports.CuDropdown = index$10.CuDropdown;
exports.CuDropdownMenu = index$11.CuDropdownMenu;
exports.CuDropdownItem = index$12.CuDropdownItem;
exports.CuTree = index$13.CuTree;
exports.CuAtlas = index$14.CuAtlas;
exports.CuTip = index$15.CuTip;
exports.CuAnchor = index$16.CuAnchor;
exports.CuAnchorLink = index$17.CuAnchorLink;
exports.CuAffix = index$18.CuAffix;
exports.CuPistol = index$19.CuPistol;
exports.CuBullet = index$1a.CuBullet;
exports.CuZone = index$1b.CuZone;
exports.CuList = index$1c.CuList;
exports.CuListAction = index$1d.CuListAction;
exports.CuListItem = index$1d.CuListItem;
exports.CuListMeta = index$1d.CuListMeta;
exports.CuSkeleton = index$1e.CuSkeleton;
exports.CuSkeletonItem = index$1f.CuSkeletonItem;
exports.CuRate = index$1g.CuRate;
exports.CuSpace = index$1h.CuSpace;
exports.default = plugin;
exports.useComicConfig = useComicConfig;
